[project]
name = "tcc-analyzer"
version = "0.1.0"
description = "A Python CLI tool for analyzing TaskChute Cloud logs"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "click>=8.1.0",
    "matplotlib>=3.10.3",
    "pandas>=2.0.0",
    "rich>=13.0.0",
    "scipy>=1.15.3",
    "seaborn>=0.13.2",
]

[project.scripts]
tcc-analyzer = "tcc_analyzer.cli:main"

[dependency-groups]
dev = [
    "lizard>=1.17.31",
    "pandas-stubs>=2.3.0.250703",
    "pre-commit>=4.2.0",
    "pyinstaller>=6.14.1",
    "pyp>=3.0.9",
    "pyright>=1.1.402",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.2",
]

[tool.ruff]
target-version = "py310"
line-length = 88
src = ["src"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "D",   # pydocstyle
    "S",   # flake8-bandit
    "T20", # flake8-print
    "PL",  # pylint
    "RUF", # ruff-specific
]
ignore = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line
    "S101", # Use of assert detected
    "PLR0913", # Too many arguments to function call
    "T201", # print found
    # "C901", # Function is too complex - handled by lizard instead
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101",    # Use of assert detected
    "PLR2004", # Magic value used in comparison
    "D",       # pydocstyle
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
pythonpath = ["src"]
